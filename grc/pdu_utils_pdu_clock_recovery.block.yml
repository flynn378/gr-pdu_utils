# auto-generated by grc.converter

id: pdu_utils_pdu_clock_recovery
label: PDU Clock Recovery
category: '[Sandia]/PDU Utilities'

parameters:
-   id: binary_slice
    label: Slice?
    dtype: enum
    options: [binary, none]
    option_attributes:
        val: ['True', 'False']

inputs:
-   domain: message
    id: pdu_in

outputs:
-   domain: message
    id: pdu_out
-   domain: message
    id: debug
    optional: true

templates:
    imports: import pdu_utils
    make: pdu_utils.pdu_clock_recovery(${binary_slice.val})

documentation: |-
    Performs whole-packet clock recovery on a PDU. Based on Michael Ossmann's talk here: https://www.youtube.com/watch?v=rQkBDMeODHc

    Input is a demodulated packet with any number of samples per symbol.

    Output is a f32vector PDU of soft symbols (if Slice set to None) or a u8vector PDU of symbols (if Slice is set to Binary).

    Replaces sample rate metadata with symbol rate metadata.

file_format: 1
